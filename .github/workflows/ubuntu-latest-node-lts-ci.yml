# For this workflow to start, in the repository on https://github.com "Settins" -> "Actions" -> "General" ->
# "Actions permissions" must be set accordingly and "Workflow permissions" must be set to "Read and write permissions".
# Sets up an LTS Node.js environment on the latest version of Ubuntu. Then runs `npm ci` followed by `npm run ci`. If
# available, code coverage data in ./coverage/lcov.info is then uploaded to https://coveralls.io/ and
# https://codeclimate.com/ if the associated GitHub repository secrets `COVERALLS_REPO_TOKEN` and
# `CODECLIMATE_TEST_REPORTER_ID` are set. Moreover, if the push happened on the `master` branch, the following
# additional steps are taken:
# - If the secret `NPM_ACCESS_TOKEN` is set, the package is also published with `npm publish`.
# - If the folder ./github_pages exists, the contents is deployed to GitHub pages. For this to work, "Settings" ->
#   "Pages" -> "Build and Deployment" -> "Source" must be set to "GitHub Actions" (currently located on e.g.
#   https://github.com/andreashuber69/node-boilerplate/settings/pages). Also under "Settings" -> "Environments" there
#   must be an environment called "github-pages" where  "Deployment branches and tags" allows for deployment from the
#   "master" branch.

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: false
        default: 'latest'
    secrets:
      COVERALLS_REPO_TOKEN:
        required: false
      CODECLIMATE_TEST_REPORTER_ID:
        required: false
      NPM_ACCESS_TOKEN:
        required: false

jobs:
  ubuntu-latest-node-lts-ci:
    name: Run continuous integration on Ubuntu Latest with Node LTS
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        registry-url: https://registry.npmjs.org/
    - name: Install dependencies
      run: npm ci
    - name: Prepare code coverage reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
    - name: Build
      run: npm run ci
    - name: Upload coverage to coveralls.io
      env:
        COVERALLS_REPO_TOKEN: ${{secrets.COVERALLS_REPO_TOKEN}}
      if: (hashFiles('./coverage/') != '') && (env.COVERALLS_REPO_TOKEN != '')
      run: npx coveralls <./coverage/lcov.info
    - name: Upload coverage to codeclimate.com
      env:
        CODECLIMATE_TEST_REPORTER_ID: ${{secrets.CODECLIMATE_TEST_REPORTER_ID}}
      if: (hashFiles('./coverage/') != '') && (env.CODECLIMATE_TEST_REPORTER_ID != '')
      run: |
        ./cc-test-reporter format-coverage --input-type lcov ./coverage/lcov.info
        ./cc-test-reporter upload-coverage --id ${{secrets.CODECLIMATE_TEST_REPORTER_ID}}
    - name: Publish to npmjs.org
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_ACCESS_TOKEN}}
      if: (env.NODE_AUTH_TOKEN != '') && (github.ref == 'refs/heads/master')
      run: |
        npm publish --tag ${{inputs.tag}} --provenance
        gh release create ${{github.ref_name}} --verify-tag --generate-notes
    - name: Upload to GitHub Pages
      if: (hashFiles('./github_pages/') != '') && (github.ref == 'refs/heads/master')
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./github_pages
    - name: Deploy to GitHub Pages
      id: deployment
      if: (hashFiles('./github_pages/') != '') && (github.ref == 'refs/heads/master')
      uses: actions/deploy-pages@v4
